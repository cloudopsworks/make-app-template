##
# (c) 2021 - Cloud Ops Works LLC - https://cloudops.works/
#            On GitHub: https://github.com/cloudopsworks
#            Distributed Under Apache v2.0 License
#
name: Code Build Workflow Template

on:
  workflow_call:
    inputs:
      isRelease:
        default: true
        required: false
        type: boolean
      ref:
        default: ''
        required: false
        type: string
      semver:
        required: true
        type: string

    secrets:
      BOT_USER:
        required: true
      BOT_EMAIL:
        required: true
      BOT_TOKEN:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Proceed with checkout of source with all the references (depth=0)  
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ inputs.ref }}
          token: ${{ secrets.BOT_TOKEN }}
      # Setup Java JDK for builds
      - name: Set JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "adopt"

      # Get pipeline conf
      - name: Get pipeline zip packaging
        id: pipeline_zip
        uses: mikefarah/yq@master
        with:
          cmd: yq eval '.pipeline[]' ./cloudopsworks-ci.yaml | grep zip | wc -l

      # Get pipeline conf
      - name: Get pipeline zip packaging globs
        id: zip_globs
        uses: mikefarah/yq@master
        with:
          cmd: yq eval '.zipGlobs[]' ./cloudopsworks-ci.yaml

      # Get pipeline conf
      - name: Get pipeline zip packaging exclude globs
        id: exclude_globs
        uses: mikefarah/yq@master
        with:
          cmd: yq eval '.excludeGlobs[]' ./cloudopsworks-ci.yaml

      # Get the owner repo
      - name: Get owner
        id: getowner
        run: |
          repo_owner=`echo "$GITHUB_REPOSITORY" | cut -f 1 -d "/"`
          repo_name=`echo "$GITHUB_REPOSITORY" | cut -f 2 -d "/"`
          echo "::set-output name=owner::$repo_owner"
          echo "::set-output name=repo_name::$repo_name"

      # Create a VERSION file to use through the build
      - name: Set Version File for a Release
        env:
          NEXT_VERSION: "${{ inputs.semver }}"
        run: |
          echo -n "$NEXT_VERSION" > VERSION

      # Build the code!
      - name: Build Code
        run: make

      #
      # Perform ZIP packaging of target files & globbed files
      #
      - name: ZIP file packaging
        if: steps.pipeline_zip.outputs.result == 1
        run: |
          VERSION=$(cat VERSION)
          ZIPFILE=${{ steps.getowner.outputs.repo_name }}-${VERSION}.zip
          mkdir -p target/
          echo '${{ steps.zip_globs.outputs.result }}' > target/.includelist
          echo '${{ steps.exclude_globs.outputs.result }}' > target/.excludelist
          cd target/
          zip -q -r -y ${ZIPFILE} . -i@../target/.includelist -x@../target/.excludelist

      # Perform of upload artfiacts
      - name: Upload Artifacts to workflow
        if: inputs.isRelease
        uses: actions/upload-artifact@v2
        with:
          name: all-artifacts
          path: |
            target/${{ steps.getowner.outputs.repo_name }}*.zip
            CHANGELOG.md
          retention-days: 1