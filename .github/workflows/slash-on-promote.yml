##
# (c) 2021 - Cloud Ops Works LLC - https://cloudops.works/
#            On GitHub: https://github.com/cloudopsworks
#            Distributed Under Apache v2.0 License
#
name: Do Promote command
on:
  repository_dispatch:
    types:
      - promote-command

permissions:
  issues: write
  checks: read
  deployments: write
  contents: read
  packages: read
  statuses: write

jobs:
  command:
    runs-on: ubuntu-latest
    steps:
      # Get the owner repo
      - name: Get owner
        id: getowner
        run: |
          repo_owner=`echo "$GITHUB_REPOSITORY" | cut -f 1 -d "/"`
          repo_name=`echo "$GITHUB_REPOSITORY" | cut -f 2 -d "/"`
          echo "::set-output name=owner::$repo_owner"
          echo "::set-output name=repo_name::$repo_name"
      # Action parameters check
      - name: Get the actions parameters
        id: params
        run: |
          version=${{ github.event.client_payload.slash_command.args.named.version }}
          environment=${{ github.event.client_payload.slash_command.args.named.env }}
          target=${{ github.event.client_payload.slash_command.args.named.release-name }}
          from_repo=${{ github.event.client_payload.slash_command.args.named.issue_repository }}
          from_issue=${{ github.event.client_payload.slash_command.args.named.issue_number }}
          from_author=${{ github.event.client_payload.slash_command.args.named.author }}
          platform=${{ github.event.client_payload.slash_command.args.named.platform }}

          failed=0
          if [[ "$version" == "" ]] ; then
            failed=1
          fi
          if [[ "$environment" == "" ]] ; then
            failed=1
          fi

          if [[ $failed -eq 0 ]] ; then
            payload="{\"promote\": {"
            payload="${payload} \"repositoryowner\": \"${{ steps.getowner.outputs.owner }}\""
            payload="${payload}, \"repository\": \"${{ steps.getowner.outputs.repo_name }}\""
            payload="${payload}, \"environment\": \"${environment}\""
            payload="${payload}, \"version\": \"${version}\""
            if [[ "$target" != "" ]]; then
              payload="${payload}, \"releasename\": \"${target}\""
            else
              payload="${payload}, \"releasename\": \"${{ steps.getowner.outputs.repo_name }}\""
            fi
            payload="${payload}, \"fromissue\": \"${from_repo}#${from_issue}\""
            payload="${payload}, \"fromauthor\": \"${from_author}\""
            payload="${payload}, \"platform\": \"${platform}\""
            payload="${payload} } }"

            echo "::set-output name=payload::$payload"
            echo "::set-output name=result::OK"
            echo "payload=$payload"
          else
            echo "Promote command is incomplete please try again"
            echo "::set-output name=result::FAIL"
          fi
      
      # Send event to repository to launch new promotion
      - name: Send Event to Environment Repository
        id: send_event
        if: steps.params.outputs.result == 'OK'
        uses: peter-evans/repository-dispatch@v1
        with:
          token: "${{ secrets.BOT_TOKEN }}"
          repository: ${{ steps.getowner.outputs.owner }}/${{ steps.getowner.outputs.repo_name }}
          event-type: promote-environment
          client-payload: '${{ steps.params.outputs.payload }}'

      # Comment issue that started this event
      - name: Comment the Issue
        uses: actions/github-script@v4
        if: steps.params.outputs.result == 'OK'
        env:
          EVENT_REPO: "${{ steps.getowner.outputs.owner }}/environment-${{ steps.getowner.outputs.owner }}-${{ github.event.client_payload.slash_command.args.named.env }}"
          EVENT_PAYLOAD: '${{ steps.params.outputs.payload }}'
        with:
          github-token: ${{secrets.BOT_TOKEN}}
          script: |
            const issue_number = "${{ github.event.client_payload.slash_command.args.named.issue_number }}"
            const repository_owner = "${{ steps.getowner.outputs.owner }}"
            const repository = "${{ steps.getowner.outputs.repo_name }}"
            const body = `Event submitted to repository: ${process.env.EVENT_REPO}
            With Payload:
            \`\`\`
            ${process.env.EVENT_PAYLOAD}
            \`\`\`
            `

            github.issues.createComment({
              owner: repository_owner,
              repo: repository,
              issue_number: issue_number,
              body: body
            })

      # Comment issue that started this event
      - name: Comment the Issue with Fail
        uses: actions/github-script@v4
        if: steps.params.outputs.result != 'OK'
        with:
          github-token: ${{secrets.BOT_TOKEN}}
          script: |
            const issue_number = "${{ github.event.client_payload.slash_command.args.named.issue_number }}"
            const repository_owner = "${{ steps.getowner.outputs.owner }}"
            const repository = "${{ steps.getowner.outputs.repo_name }}"
            const body = `Sorry Event can't be submitted, please check the following:
            - There was an error on building Promotion Payload.
            - There is a missing parameter for the promotion command
            `

            github.issues.createComment({
              owner: repository_owner,
              repo: repository,
              issue_number: issue_number,
              body: body
            })
